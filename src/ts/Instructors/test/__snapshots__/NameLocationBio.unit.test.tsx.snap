// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NameLocationBio Matches snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <NameLocationBio
    bioBlur={[MockFunction]}
    bioChange={[MockFunction]}
    displayName=""
    handleChange={[MockFunction]}
    updateName={[MockFunction]}
    user={
      Object {
        "displayName": "",
        "email": "",
        "firstName": "",
        "hearAboutUs": "",
        "id": "",
        "lastName": "",
        "password": "",
        "role": "instructor",
        "zipCode": "",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="nabi-text-center"
        >
          <WithStyles(Typography)
            className="nabi-text-center nabi-text-mediumbold nabi-margin-bottom-xsmall 
            nabi-display-inline-block "
          >
            
          </WithStyles(Typography)>
          <WithStyles(IconButton)
            onClick={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
          >
            <pure(Edit) />
          </WithStyles(IconButton)>
        </div>,
        <WithStyles(Typography)
          className="nabi-text-center"
        >
          
        </WithStyles(Typography)>,
        <WithStyles(Typography)
          className="nabi-margin-top-small"
          variant="body2"
        >
          Bio
        </WithStyles(Typography)>,
        <TextField
          fullWidth={true}
          id="bio"
          margin="normal"
          multiline={true}
          name="bio"
          onBlur={[MockFunction]}
          onChange={[MockFunction]}
          placeholder="What would you like your students to know  about you?"
          required={true}
          rows={6}
          select={false}
        />,
        <WithStyles(Divider)
          className="nabi-margin-top-small"
        />,
        <EditName
          closeHandler={[Function]}
          displayName=""
          firstName=""
          handleChange={[MockFunction]}
          handleSubmit={[Function]}
          isFormDialogOpen={false}
          lastName=""
        />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <WithStyles(Typography)
              className="nabi-text-center nabi-text-mediumbold nabi-margin-bottom-xsmall 
            nabi-display-inline-block "
            >
              
            </WithStyles(Typography)>,
            <WithStyles(IconButton)
              onClick={[Function]}
              onMouseOut={[Function]}
              onMouseOver={[Function]}
            >
              <pure(Edit) />
            </WithStyles(IconButton)>,
          ],
          "className": "nabi-text-center",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "",
              "className": "nabi-text-center nabi-text-mediumbold nabi-margin-bottom-xsmall 
            nabi-display-inline-block ",
            },
            "ref": null,
            "rendered": "",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <pure(Edit) />,
              "onClick": [Function],
              "onMouseOut": [Function],
              "onMouseOver": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "",
          "className": "nabi-text-center",
        },
        "ref": null,
        "rendered": "",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "Bio",
          "className": "nabi-margin-top-small",
          "variant": "body2",
        },
        "ref": null,
        "rendered": "Bio",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "fullWidth": true,
          "id": "bio",
          "margin": "normal",
          "multiline": true,
          "name": "bio",
          "onBlur": [MockFunction],
          "onChange": [MockFunction],
          "placeholder": "What would you like your students to know  about you?",
          "required": true,
          "rows": 6,
          "select": false,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "className": "nabi-margin-top-small",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "closeHandler": [Function],
          "displayName": "",
          "firstName": "",
          "handleChange": [MockFunction],
          "handleSubmit": [Function],
          "isFormDialogOpen": false,
          "lastName": "",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="nabi-text-center"
          >
            <WithStyles(Typography)
              className="nabi-text-center nabi-text-mediumbold nabi-margin-bottom-xsmall 
            nabi-display-inline-block "
            >
              
            </WithStyles(Typography)>
            <WithStyles(IconButton)
              onClick={[Function]}
              onMouseOut={[Function]}
              onMouseOver={[Function]}
            >
              <pure(Edit) />
            </WithStyles(IconButton)>
          </div>,
          <WithStyles(Typography)
            className="nabi-text-center"
          >
            
          </WithStyles(Typography)>,
          <WithStyles(Typography)
            className="nabi-margin-top-small"
            variant="body2"
          >
            Bio
          </WithStyles(Typography)>,
          <TextField
            fullWidth={true}
            id="bio"
            margin="normal"
            multiline={true}
            name="bio"
            onBlur={[MockFunction]}
            onChange={[MockFunction]}
            placeholder="What would you like your students to know  about you?"
            required={true}
            rows={6}
            select={false}
          />,
          <WithStyles(Divider)
            className="nabi-margin-top-small"
          />,
          <EditName
            closeHandler={[Function]}
            displayName=""
            firstName=""
            handleChange={[MockFunction]}
            handleSubmit={[Function]}
            isFormDialogOpen={false}
            lastName=""
          />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <WithStyles(Typography)
                className="nabi-text-center nabi-text-mediumbold nabi-margin-bottom-xsmall 
            nabi-display-inline-block "
              >
                
              </WithStyles(Typography)>,
              <WithStyles(IconButton)
                onClick={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
              >
                <pure(Edit) />
              </WithStyles(IconButton)>,
            ],
            "className": "nabi-text-center",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "",
                "className": "nabi-text-center nabi-text-mediumbold nabi-margin-bottom-xsmall 
            nabi-display-inline-block ",
              },
              "ref": null,
              "rendered": "",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <pure(Edit) />,
                "onClick": [Function],
                "onMouseOut": [Function],
                "onMouseOver": [Function],
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "",
            "className": "nabi-text-center",
          },
          "ref": null,
          "rendered": "",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Bio",
            "className": "nabi-margin-top-small",
            "variant": "body2",
          },
          "ref": null,
          "rendered": "Bio",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "fullWidth": true,
            "id": "bio",
            "margin": "normal",
            "multiline": true,
            "name": "bio",
            "onBlur": [MockFunction],
            "onChange": [MockFunction],
            "placeholder": "What would you like your students to know  about you?",
            "required": true,
            "rows": 6,
            "select": false,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "className": "nabi-margin-top-small",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "closeHandler": [Function],
            "displayName": "",
            "firstName": "",
            "handleChange": [MockFunction],
            "handleSubmit": [Function],
            "isFormDialogOpen": false,
            "lastName": "",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
