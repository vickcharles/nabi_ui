// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BasicInfo Matches snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <BasicInfo
    changeAvatar={[MockFunction]}
    updateInstructor={[MockFunction]}
    updateUser={[MockFunction]}
    user={
      Object {
        "displayName": "",
        "email": "oreo",
        "firstName": "foo",
        "hearAboutUs": "",
        "id": "",
        "lastName": "bar",
        "password": "",
        "role": "instructor",
        "zipCode": "",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <ImageUploader
          imageChanged={[Function]}
        />,
        <NameLocationBio
          bioBlur={[Function]}
          bioChange={[Function]}
          displayName="foo bar"
          handleChange={[Function]}
          updateName={[Function]}
          user={
            Object {
              "displayName": "",
              "email": "oreo",
              "firstName": "foo",
              "hearAboutUs": "",
              "id": "",
              "lastName": "bar",
              "password": "",
              "role": "instructor",
              "zipCode": "",
            }
          }
        />,
        <WithStyles(Typography)
          className="nabi-margin-top-small"
          variant="body2"
        >
          Instruments
        </WithStyles(Typography)>,
        Array [],
        <Instruments
          addInstrument={[Function]}
          handleChange={[Function]}
          instrument=""
          skillLevel="Beginner"
        />,
        <Rates
          fortyFiveMinsRate={0}
          handleChange={[Function]}
          ninetyMinsRate={0}
          sixtyMinsRate={0}
          thirtyMinsRate={0}
          updateRates={[Function]}
        />,
        <PlaceForLessons
          handleChange={[Function]}
          handleChangePlaceForLessons={[Function]}
          home={false}
          online={false}
          studio={false}
          studioAddress=""
          updateStudioAddress={[Function]}
        />,
        <Availability
          updateInstructor={[Function]}
          userId=""
        />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "imageChanged": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "bioBlur": [Function],
          "bioChange": [Function],
          "displayName": "foo bar",
          "handleChange": [Function],
          "updateName": [Function],
          "user": Object {
            "displayName": "",
            "email": "oreo",
            "firstName": "foo",
            "hearAboutUs": "",
            "id": "",
            "lastName": "bar",
            "password": "",
            "role": "instructor",
            "zipCode": "",
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "Instruments",
          "className": "nabi-margin-top-small",
          "variant": "body2",
        },
        "ref": null,
        "rendered": "Instruments",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "addInstrument": [Function],
          "handleChange": [Function],
          "instrument": "",
          "skillLevel": "Beginner",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "fortyFiveMinsRate": 0,
          "handleChange": [Function],
          "ninetyMinsRate": 0,
          "sixtyMinsRate": 0,
          "thirtyMinsRate": 0,
          "updateRates": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "handleChange": [Function],
          "handleChangePlaceForLessons": [Function],
          "home": false,
          "online": false,
          "studio": false,
          "studioAddress": "",
          "updateStudioAddress": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "updateInstructor": [Function],
          "userId": "",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <ImageUploader
            imageChanged={[Function]}
          />,
          <NameLocationBio
            bioBlur={[Function]}
            bioChange={[Function]}
            displayName="foo bar"
            handleChange={[Function]}
            updateName={[Function]}
            user={
              Object {
                "displayName": "",
                "email": "oreo",
                "firstName": "foo",
                "hearAboutUs": "",
                "id": "",
                "lastName": "bar",
                "password": "",
                "role": "instructor",
                "zipCode": "",
              }
            }
          />,
          <WithStyles(Typography)
            className="nabi-margin-top-small"
            variant="body2"
          >
            Instruments
          </WithStyles(Typography)>,
          Array [],
          <Instruments
            addInstrument={[Function]}
            handleChange={[Function]}
            instrument=""
            skillLevel="Beginner"
          />,
          <Rates
            fortyFiveMinsRate={0}
            handleChange={[Function]}
            ninetyMinsRate={0}
            sixtyMinsRate={0}
            thirtyMinsRate={0}
            updateRates={[Function]}
          />,
          <PlaceForLessons
            handleChange={[Function]}
            handleChangePlaceForLessons={[Function]}
            home={false}
            online={false}
            studio={false}
            studioAddress=""
            updateStudioAddress={[Function]}
          />,
          <Availability
            updateInstructor={[Function]}
            userId=""
          />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "imageChanged": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bioBlur": [Function],
            "bioChange": [Function],
            "displayName": "foo bar",
            "handleChange": [Function],
            "updateName": [Function],
            "user": Object {
              "displayName": "",
              "email": "oreo",
              "firstName": "foo",
              "hearAboutUs": "",
              "id": "",
              "lastName": "bar",
              "password": "",
              "role": "instructor",
              "zipCode": "",
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Instruments",
            "className": "nabi-margin-top-small",
            "variant": "body2",
          },
          "ref": null,
          "rendered": "Instruments",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "addInstrument": [Function],
            "handleChange": [Function],
            "instrument": "",
            "skillLevel": "Beginner",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "fortyFiveMinsRate": 0,
            "handleChange": [Function],
            "ninetyMinsRate": 0,
            "sixtyMinsRate": 0,
            "thirtyMinsRate": 0,
            "updateRates": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "handleChange": [Function],
            "handleChangePlaceForLessons": [Function],
            "home": false,
            "online": false,
            "studio": false,
            "studioAddress": "",
            "updateStudioAddress": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "updateInstructor": [Function],
            "userId": "",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
