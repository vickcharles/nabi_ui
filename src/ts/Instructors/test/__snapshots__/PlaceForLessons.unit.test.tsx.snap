// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PlaceForLessons Shallow Matches snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PlaceForLessons />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <WithStyles(Typography)
          className="nabi-margin-top-small nabi-margin-bottom-xsmall"
          variant="body2"
        >
          Place for lessons
        </WithStyles(Typography)>,
        <WithStyles(FormGroup)
          className="nabi-margin-left-small"
        >
          <WithStyles(FormControlLabel)
            control={
              <WithStyles(Checkbox)
                value=""
              />
            }
            label="Student's home"
          />
          <WithStyles(FormControlLabel)
            control={
              <WithStyles(Checkbox)
                value=""
              />
            }
            label="Instructor's studio"
          />
          <WithStyles(FormControlLabel)
            control={
              <WithStyles(Checkbox)
                value=""
              />
            }
            label="Online"
          />
        </WithStyles(FormGroup)>,
        <TextField
          className="nabi-margin-top-xsmall"
          fullWidth={true}
          placeholder="Enter your studio address"
          required={true}
          select={false}
          type="number"
        />,
        <WithStyles(Divider)
          className="nabi-margin-top-small"
        />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "Place for lessons",
          "className": "nabi-margin-top-small nabi-margin-bottom-xsmall",
          "variant": "body2",
        },
        "ref": null,
        "rendered": "Place for lessons",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <WithStyles(FormControlLabel)
              control={
                <WithStyles(Checkbox)
                  value=""
                />
              }
              label="Student's home"
            />,
            <WithStyles(FormControlLabel)
              control={
                <WithStyles(Checkbox)
                  value=""
                />
              }
              label="Instructor's studio"
            />,
            <WithStyles(FormControlLabel)
              control={
                <WithStyles(Checkbox)
                  value=""
                />
              }
              label="Online"
            />,
          ],
          "className": "nabi-margin-left-small",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "control": <WithStyles(Checkbox)
                value=""
              />,
              "label": "Student's home",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "control": <WithStyles(Checkbox)
                value=""
              />,
              "label": "Instructor's studio",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "control": <WithStyles(Checkbox)
                value=""
              />,
              "label": "Online",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "className": "nabi-margin-top-xsmall",
          "fullWidth": true,
          "placeholder": "Enter your studio address",
          "required": true,
          "select": false,
          "type": "number",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "className": "nabi-margin-top-small",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <WithStyles(Typography)
            className="nabi-margin-top-small nabi-margin-bottom-xsmall"
            variant="body2"
          >
            Place for lessons
          </WithStyles(Typography)>,
          <WithStyles(FormGroup)
            className="nabi-margin-left-small"
          >
            <WithStyles(FormControlLabel)
              control={
                <WithStyles(Checkbox)
                  value=""
                />
              }
              label="Student's home"
            />
            <WithStyles(FormControlLabel)
              control={
                <WithStyles(Checkbox)
                  value=""
                />
              }
              label="Instructor's studio"
            />
            <WithStyles(FormControlLabel)
              control={
                <WithStyles(Checkbox)
                  value=""
                />
              }
              label="Online"
            />
          </WithStyles(FormGroup)>,
          <TextField
            className="nabi-margin-top-xsmall"
            fullWidth={true}
            placeholder="Enter your studio address"
            required={true}
            select={false}
            type="number"
          />,
          <WithStyles(Divider)
            className="nabi-margin-top-small"
          />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Place for lessons",
            "className": "nabi-margin-top-small nabi-margin-bottom-xsmall",
            "variant": "body2",
          },
          "ref": null,
          "rendered": "Place for lessons",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <WithStyles(FormControlLabel)
                control={
                  <WithStyles(Checkbox)
                    value=""
                  />
                }
                label="Student's home"
              />,
              <WithStyles(FormControlLabel)
                control={
                  <WithStyles(Checkbox)
                    value=""
                  />
                }
                label="Instructor's studio"
              />,
              <WithStyles(FormControlLabel)
                control={
                  <WithStyles(Checkbox)
                    value=""
                  />
                }
                label="Online"
              />,
            ],
            "className": "nabi-margin-left-small",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "control": <WithStyles(Checkbox)
                  value=""
                />,
                "label": "Student's home",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "control": <WithStyles(Checkbox)
                  value=""
                />,
                "label": "Instructor's studio",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "control": <WithStyles(Checkbox)
                  value=""
                />,
                "label": "Online",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "className": "nabi-margin-top-xsmall",
            "fullWidth": true,
            "placeholder": "Enter your studio address",
            "required": true,
            "select": false,
            "type": "number",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "className": "nabi-margin-top-small",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
