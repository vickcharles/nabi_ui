// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PlaceForLessons Shallow Matches snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PlaceForLessons
    handleChange={[MockFunction]}
    handleChangePlaceForLessons={[MockFunction]}
    home={false}
    online={false}
    studio={false}
    studioAddress=""
    updateStudioAddress={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <WithStyles(Typography)
          className="nabi-margin-top-small nabi-margin-bottom-xsmall"
          variant="body2"
        >
          Place for lessons
        </WithStyles(Typography)>,
        <WithStyles(FormGroup)
          className="nabi-margin-left-small"
        >
          <WithStyles(FormControlLabel)
            control={
              <WithStyles(Checkbox)
                checked={false}
                name="home"
                onChange={[MockFunction]}
              />
            }
            label="Student's home"
          />
          <WithStyles(FormControlLabel)
            control={
              <WithStyles(Checkbox)
                checked={false}
                name="studio"
                onChange={[MockFunction]}
              />
            }
            label="Instructor's studio"
          />
          <WithStyles(FormControlLabel)
            control={
              <WithStyles(Checkbox)
                checked={false}
                name="online"
                onChange={[MockFunction]}
              />
            }
            label="Online"
          />
        </WithStyles(FormGroup)>,
        false,
        <WithStyles(Divider)
          className="nabi-margin-top-small"
        />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "Place for lessons",
          "className": "nabi-margin-top-small nabi-margin-bottom-xsmall",
          "variant": "body2",
        },
        "ref": null,
        "rendered": "Place for lessons",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <WithStyles(FormControlLabel)
              control={
                <WithStyles(Checkbox)
                  checked={false}
                  name="home"
                  onChange={[MockFunction]}
                />
              }
              label="Student's home"
            />,
            <WithStyles(FormControlLabel)
              control={
                <WithStyles(Checkbox)
                  checked={false}
                  name="studio"
                  onChange={[MockFunction]}
                />
              }
              label="Instructor's studio"
            />,
            <WithStyles(FormControlLabel)
              control={
                <WithStyles(Checkbox)
                  checked={false}
                  name="online"
                  onChange={[MockFunction]}
                />
              }
              label="Online"
            />,
          ],
          "className": "nabi-margin-left-small",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "control": <WithStyles(Checkbox)
                checked={false}
                name="home"
                onChange={[MockFunction]}
              />,
              "label": "Student's home",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "control": <WithStyles(Checkbox)
                checked={false}
                name="studio"
                onChange={[MockFunction]}
              />,
              "label": "Instructor's studio",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "control": <WithStyles(Checkbox)
                checked={false}
                name="online"
                onChange={[MockFunction]}
              />,
              "label": "Online",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      false,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "className": "nabi-margin-top-small",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <WithStyles(Typography)
            className="nabi-margin-top-small nabi-margin-bottom-xsmall"
            variant="body2"
          >
            Place for lessons
          </WithStyles(Typography)>,
          <WithStyles(FormGroup)
            className="nabi-margin-left-small"
          >
            <WithStyles(FormControlLabel)
              control={
                <WithStyles(Checkbox)
                  checked={false}
                  name="home"
                  onChange={[MockFunction]}
                />
              }
              label="Student's home"
            />
            <WithStyles(FormControlLabel)
              control={
                <WithStyles(Checkbox)
                  checked={false}
                  name="studio"
                  onChange={[MockFunction]}
                />
              }
              label="Instructor's studio"
            />
            <WithStyles(FormControlLabel)
              control={
                <WithStyles(Checkbox)
                  checked={false}
                  name="online"
                  onChange={[MockFunction]}
                />
              }
              label="Online"
            />
          </WithStyles(FormGroup)>,
          false,
          <WithStyles(Divider)
            className="nabi-margin-top-small"
          />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Place for lessons",
            "className": "nabi-margin-top-small nabi-margin-bottom-xsmall",
            "variant": "body2",
          },
          "ref": null,
          "rendered": "Place for lessons",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <WithStyles(FormControlLabel)
                control={
                  <WithStyles(Checkbox)
                    checked={false}
                    name="home"
                    onChange={[MockFunction]}
                  />
                }
                label="Student's home"
              />,
              <WithStyles(FormControlLabel)
                control={
                  <WithStyles(Checkbox)
                    checked={false}
                    name="studio"
                    onChange={[MockFunction]}
                  />
                }
                label="Instructor's studio"
              />,
              <WithStyles(FormControlLabel)
                control={
                  <WithStyles(Checkbox)
                    checked={false}
                    name="online"
                    onChange={[MockFunction]}
                  />
                }
                label="Online"
              />,
            ],
            "className": "nabi-margin-left-small",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "control": <WithStyles(Checkbox)
                  checked={false}
                  name="home"
                  onChange={[MockFunction]}
                />,
                "label": "Student's home",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "control": <WithStyles(Checkbox)
                  checked={false}
                  name="studio"
                  onChange={[MockFunction]}
                />,
                "label": "Instructor's studio",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "control": <WithStyles(Checkbox)
                  checked={false}
                  name="online"
                  onChange={[MockFunction]}
                />,
                "label": "Online",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        false,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "className": "nabi-margin-top-small",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
