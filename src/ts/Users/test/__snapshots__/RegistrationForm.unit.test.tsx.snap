// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RegistrationForm Shallow Matches snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <RegistrationForm
    handleChange={[MockFunction]}
    handleSubmit={[MockFunction]}
    hearAboutUs=""
    selectedRole=""
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "autoComplete": "off",
      "children": Array [
        <WithStyles(FormControl)
          component="fieldset"
          required={true}
        >
          <WithStyles(FormLabel)
            className="nabi-margin-bottom-xsmall"
            component="legend"
          >
            What would you like to do?
          </WithStyles(FormLabel)>
          <RadioGroup
            name="role"
            onChange={[MockFunction]}
            value="student"
          >
            <WithStyles(FormControlLabel)
              control={<WithStyles(Radio) />}
              label="Find a music instructor"
              value="student"
            />
            <WithStyles(FormControlLabel)
              control={<WithStyles(Radio) />}
              label="Find teaching jobs"
              value="instructor"
            />
          </RadioGroup>
        </WithStyles(FormControl)>,
        <div
          className="nabi-margin-top-small"
        >
          <WithStyles(FormControl)
            component="fieldset"
            fullWidth={true}
            required={true}
          >
            <WithStyles(FormLabel)
              className="nabi-margin-bottom-xsmall"
              component="legend"
            >
              Are the lessons for you or for your child?
            </WithStyles(FormLabel)>
            <RadioGroup
              name="role"
              onChange={[MockFunction]}
              value=""
            >
              <WithStyles(FormControlLabel)
                control={<WithStyles(Radio) />}
                label="For me"
                value="student"
              />
              <WithStyles(FormControlLabel)
                control={<WithStyles(Radio) />}
                label="For my child"
                value="parent"
              />
            </RadioGroup>
          </WithStyles(FormControl)>
        </div>,
        <WithStyles(Divider)
          className="nabi-margin-top-small"
        />,
        <WithStyles(Typography)
          className="nabi-margin-top-small"
          variant="body2"
        >
          Register as an instructor
        </WithStyles(Typography)>,
        <TextField
          fullWidth={true}
          id="firstName"
          margin="normal"
          name="firstName"
          onChange={[MockFunction]}
          placeholder="First Name"
          required={true}
          select={false}
        />,
        <TextField
          fullWidth={true}
          id="lastName"
          margin="normal"
          name="lastName"
          onChange={[MockFunction]}
          placeholder="Last Name"
          required={true}
          select={false}
        />,
        <TextField
          fullWidth={true}
          id="zipCode"
          margin="normal"
          name="zipCode"
          onChange={[MockFunction]}
          placeholder="ZIP Code"
          required={true}
          select={false}
        />,
        <TextField
          fullWidth={true}
          id="email"
          margin="normal"
          name="email"
          onChange={[MockFunction]}
          placeholder="Email"
          required={true}
          select={false}
        />,
        <TextField
          fullWidth={true}
          id="password"
          margin="normal"
          name="password"
          onChange={[MockFunction]}
          placeholder="Password"
          required={true}
          select={false}
          type="password"
        />,
        <WithStyles(FormControl)
          fullWidth={true}
          required={true}
        >
          <WithStyles(InputLabel)
            htmlFor="hearAboutUs"
          >
            How did you hear about us?
          </WithStyles(InputLabel)>
          <WithStyles(Select)
            fullWidth={true}
            input={
              <WithStyles(Input)
                id="hearAboutUs"
                name="hearAboutUs"
              />
            }
            onChange={[MockFunction]}
            value=""
          >
            <WithStyles(MenuItem)
              value="google"
            >
              Google
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value="facebook"
            >
              Facebook
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value="craigslist"
            >
              Craigslist
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value="printAds"
            >
              Print Ads
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value="wordOfMouth"
            >
              Word Of Mouth
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value="currentNabiUser"
            >
              Current Nabi User
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value="other"
            >
              Other
            </WithStyles(MenuItem)>
          </WithStyles(Select)>
        </WithStyles(FormControl)>,
        <div
          className="nabi-text-center nabi-margin-top-large"
        >
          <WithStyles(Button)
            color="primary"
            onClick={[MockFunction]}
            variant="raised"
          >
            Submit
          </WithStyles(Button)>
        </div>,
      ],
      "className": "nabi-general-form nabi-margin-top-medium",
      "noValidate": true,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <WithStyles(FormLabel)
              className="nabi-margin-bottom-xsmall"
              component="legend"
            >
              What would you like to do?
            </WithStyles(FormLabel)>,
            <RadioGroup
              name="role"
              onChange={[MockFunction]}
              value="student"
            >
              <WithStyles(FormControlLabel)
                control={<WithStyles(Radio) />}
                label="Find a music instructor"
                value="student"
              />
              <WithStyles(FormControlLabel)
                control={<WithStyles(Radio) />}
                label="Find teaching jobs"
                value="instructor"
              />
            </RadioGroup>,
          ],
          "component": "fieldset",
          "required": true,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "What would you like to do?",
              "className": "nabi-margin-bottom-xsmall",
              "component": "legend",
            },
            "ref": null,
            "rendered": "What would you like to do?",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <WithStyles(FormControlLabel)
                  control={<WithStyles(Radio) />}
                  label="Find a music instructor"
                  value="student"
                />,
                <WithStyles(FormControlLabel)
                  control={<WithStyles(Radio) />}
                  label="Find teaching jobs"
                  value="instructor"
                />,
              ],
              "name": "role",
              "onChange": [MockFunction],
              "value": "student",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "control": <WithStyles(Radio) />,
                  "label": "Find a music instructor",
                  "value": "student",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "control": <WithStyles(Radio) />,
                  "label": "Find teaching jobs",
                  "value": "instructor",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <WithStyles(FormControl)
            component="fieldset"
            fullWidth={true}
            required={true}
          >
            <WithStyles(FormLabel)
              className="nabi-margin-bottom-xsmall"
              component="legend"
            >
              Are the lessons for you or for your child?
            </WithStyles(FormLabel)>
            <RadioGroup
              name="role"
              onChange={[MockFunction]}
              value=""
            >
              <WithStyles(FormControlLabel)
                control={<WithStyles(Radio) />}
                label="For me"
                value="student"
              />
              <WithStyles(FormControlLabel)
                control={<WithStyles(Radio) />}
                label="For my child"
                value="parent"
              />
            </RadioGroup>
          </WithStyles(FormControl)>,
          "className": "nabi-margin-top-small",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <WithStyles(FormLabel)
                className="nabi-margin-bottom-xsmall"
                component="legend"
              >
                Are the lessons for you or for your child?
              </WithStyles(FormLabel)>,
              <RadioGroup
                name="role"
                onChange={[MockFunction]}
                value=""
              >
                <WithStyles(FormControlLabel)
                  control={<WithStyles(Radio) />}
                  label="For me"
                  value="student"
                />
                <WithStyles(FormControlLabel)
                  control={<WithStyles(Radio) />}
                  label="For my child"
                  value="parent"
                />
              </RadioGroup>,
            ],
            "component": "fieldset",
            "fullWidth": true,
            "required": true,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Are the lessons for you or for your child?",
                "className": "nabi-margin-bottom-xsmall",
                "component": "legend",
              },
              "ref": null,
              "rendered": "Are the lessons for you or for your child?",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <WithStyles(FormControlLabel)
                    control={<WithStyles(Radio) />}
                    label="For me"
                    value="student"
                  />,
                  <WithStyles(FormControlLabel)
                    control={<WithStyles(Radio) />}
                    label="For my child"
                    value="parent"
                  />,
                ],
                "name": "role",
                "onChange": [MockFunction],
                "value": "",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "control": <WithStyles(Radio) />,
                    "label": "For me",
                    "value": "student",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "control": <WithStyles(Radio) />,
                    "label": "For my child",
                    "value": "parent",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "className": "nabi-margin-top-small",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "Register as an instructor",
          "className": "nabi-margin-top-small",
          "variant": "body2",
        },
        "ref": null,
        "rendered": "Register as an instructor",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "fullWidth": true,
          "id": "firstName",
          "margin": "normal",
          "name": "firstName",
          "onChange": [MockFunction],
          "placeholder": "First Name",
          "required": true,
          "select": false,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "fullWidth": true,
          "id": "lastName",
          "margin": "normal",
          "name": "lastName",
          "onChange": [MockFunction],
          "placeholder": "Last Name",
          "required": true,
          "select": false,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "fullWidth": true,
          "id": "zipCode",
          "margin": "normal",
          "name": "zipCode",
          "onChange": [MockFunction],
          "placeholder": "ZIP Code",
          "required": true,
          "select": false,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "fullWidth": true,
          "id": "email",
          "margin": "normal",
          "name": "email",
          "onChange": [MockFunction],
          "placeholder": "Email",
          "required": true,
          "select": false,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "fullWidth": true,
          "id": "password",
          "margin": "normal",
          "name": "password",
          "onChange": [MockFunction],
          "placeholder": "Password",
          "required": true,
          "select": false,
          "type": "password",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <WithStyles(InputLabel)
              htmlFor="hearAboutUs"
            >
              How did you hear about us?
            </WithStyles(InputLabel)>,
            <WithStyles(Select)
              fullWidth={true}
              input={
                <WithStyles(Input)
                  id="hearAboutUs"
                  name="hearAboutUs"
                />
              }
              onChange={[MockFunction]}
              value=""
            >
              <WithStyles(MenuItem)
                value="google"
              >
                Google
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="facebook"
              >
                Facebook
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="craigslist"
              >
                Craigslist
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="printAds"
              >
                Print Ads
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="wordOfMouth"
              >
                Word Of Mouth
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="currentNabiUser"
              >
                Current Nabi User
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="other"
              >
                Other
              </WithStyles(MenuItem)>
            </WithStyles(Select)>,
          ],
          "fullWidth": true,
          "required": true,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "How did you hear about us?",
              "htmlFor": "hearAboutUs",
            },
            "ref": null,
            "rendered": "How did you hear about us?",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <WithStyles(MenuItem)
                  value="google"
                >
                  Google
                </WithStyles(MenuItem)>,
                <WithStyles(MenuItem)
                  value="facebook"
                >
                  Facebook
                </WithStyles(MenuItem)>,
                <WithStyles(MenuItem)
                  value="craigslist"
                >
                  Craigslist
                </WithStyles(MenuItem)>,
                <WithStyles(MenuItem)
                  value="printAds"
                >
                  Print Ads
                </WithStyles(MenuItem)>,
                <WithStyles(MenuItem)
                  value="wordOfMouth"
                >
                  Word Of Mouth
                </WithStyles(MenuItem)>,
                <WithStyles(MenuItem)
                  value="currentNabiUser"
                >
                  Current Nabi User
                </WithStyles(MenuItem)>,
                <WithStyles(MenuItem)
                  value="other"
                >
                  Other
                </WithStyles(MenuItem)>,
              ],
              "fullWidth": true,
              "input": <WithStyles(Input)
                id="hearAboutUs"
                name="hearAboutUs"
              />,
              "onChange": [MockFunction],
              "value": "",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "Google",
                "nodeType": "class",
                "props": Object {
                  "children": "Google",
                  "value": "google",
                },
                "ref": null,
                "rendered": "Google",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "Facebook",
                "nodeType": "class",
                "props": Object {
                  "children": "Facebook",
                  "value": "facebook",
                },
                "ref": null,
                "rendered": "Facebook",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "Craigslist",
                "nodeType": "class",
                "props": Object {
                  "children": "Craigslist",
                  "value": "craigslist",
                },
                "ref": null,
                "rendered": "Craigslist",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "PrintAds",
                "nodeType": "class",
                "props": Object {
                  "children": "Print Ads",
                  "value": "printAds",
                },
                "ref": null,
                "rendered": "Print Ads",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "WordOfMouth",
                "nodeType": "class",
                "props": Object {
                  "children": "Word Of Mouth",
                  "value": "wordOfMouth",
                },
                "ref": null,
                "rendered": "Word Of Mouth",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "CurrentNabiUser",
                "nodeType": "class",
                "props": Object {
                  "children": "Current Nabi User",
                  "value": "currentNabiUser",
                },
                "ref": null,
                "rendered": "Current Nabi User",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "Other",
                "nodeType": "class",
                "props": Object {
                  "children": "Other",
                  "value": "other",
                },
                "ref": null,
                "rendered": "Other",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <WithStyles(Button)
            color="primary"
            onClick={[MockFunction]}
            variant="raised"
          >
            Submit
          </WithStyles(Button)>,
          "className": "nabi-text-center nabi-margin-top-large",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Submit",
            "color": "primary",
            "onClick": [MockFunction],
            "variant": "raised",
          },
          "ref": null,
          "rendered": "Submit",
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": "form",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "autoComplete": "off",
        "children": Array [
          <WithStyles(FormControl)
            component="fieldset"
            required={true}
          >
            <WithStyles(FormLabel)
              className="nabi-margin-bottom-xsmall"
              component="legend"
            >
              What would you like to do?
            </WithStyles(FormLabel)>
            <RadioGroup
              name="role"
              onChange={[MockFunction]}
              value="student"
            >
              <WithStyles(FormControlLabel)
                control={<WithStyles(Radio) />}
                label="Find a music instructor"
                value="student"
              />
              <WithStyles(FormControlLabel)
                control={<WithStyles(Radio) />}
                label="Find teaching jobs"
                value="instructor"
              />
            </RadioGroup>
          </WithStyles(FormControl)>,
          <div
            className="nabi-margin-top-small"
          >
            <WithStyles(FormControl)
              component="fieldset"
              fullWidth={true}
              required={true}
            >
              <WithStyles(FormLabel)
                className="nabi-margin-bottom-xsmall"
                component="legend"
              >
                Are the lessons for you or for your child?
              </WithStyles(FormLabel)>
              <RadioGroup
                name="role"
                onChange={[MockFunction]}
                value=""
              >
                <WithStyles(FormControlLabel)
                  control={<WithStyles(Radio) />}
                  label="For me"
                  value="student"
                />
                <WithStyles(FormControlLabel)
                  control={<WithStyles(Radio) />}
                  label="For my child"
                  value="parent"
                />
              </RadioGroup>
            </WithStyles(FormControl)>
          </div>,
          <WithStyles(Divider)
            className="nabi-margin-top-small"
          />,
          <WithStyles(Typography)
            className="nabi-margin-top-small"
            variant="body2"
          >
            Register as an instructor
          </WithStyles(Typography)>,
          <TextField
            fullWidth={true}
            id="firstName"
            margin="normal"
            name="firstName"
            onChange={[MockFunction]}
            placeholder="First Name"
            required={true}
            select={false}
          />,
          <TextField
            fullWidth={true}
            id="lastName"
            margin="normal"
            name="lastName"
            onChange={[MockFunction]}
            placeholder="Last Name"
            required={true}
            select={false}
          />,
          <TextField
            fullWidth={true}
            id="zipCode"
            margin="normal"
            name="zipCode"
            onChange={[MockFunction]}
            placeholder="ZIP Code"
            required={true}
            select={false}
          />,
          <TextField
            fullWidth={true}
            id="email"
            margin="normal"
            name="email"
            onChange={[MockFunction]}
            placeholder="Email"
            required={true}
            select={false}
          />,
          <TextField
            fullWidth={true}
            id="password"
            margin="normal"
            name="password"
            onChange={[MockFunction]}
            placeholder="Password"
            required={true}
            select={false}
            type="password"
          />,
          <WithStyles(FormControl)
            fullWidth={true}
            required={true}
          >
            <WithStyles(InputLabel)
              htmlFor="hearAboutUs"
            >
              How did you hear about us?
            </WithStyles(InputLabel)>
            <WithStyles(Select)
              fullWidth={true}
              input={
                <WithStyles(Input)
                  id="hearAboutUs"
                  name="hearAboutUs"
                />
              }
              onChange={[MockFunction]}
              value=""
            >
              <WithStyles(MenuItem)
                value="google"
              >
                Google
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="facebook"
              >
                Facebook
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="craigslist"
              >
                Craigslist
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="printAds"
              >
                Print Ads
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="wordOfMouth"
              >
                Word Of Mouth
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="currentNabiUser"
              >
                Current Nabi User
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="other"
              >
                Other
              </WithStyles(MenuItem)>
            </WithStyles(Select)>
          </WithStyles(FormControl)>,
          <div
            className="nabi-text-center nabi-margin-top-large"
          >
            <WithStyles(Button)
              color="primary"
              onClick={[MockFunction]}
              variant="raised"
            >
              Submit
            </WithStyles(Button)>
          </div>,
        ],
        "className": "nabi-general-form nabi-margin-top-medium",
        "noValidate": true,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <WithStyles(FormLabel)
                className="nabi-margin-bottom-xsmall"
                component="legend"
              >
                What would you like to do?
              </WithStyles(FormLabel)>,
              <RadioGroup
                name="role"
                onChange={[MockFunction]}
                value="student"
              >
                <WithStyles(FormControlLabel)
                  control={<WithStyles(Radio) />}
                  label="Find a music instructor"
                  value="student"
                />
                <WithStyles(FormControlLabel)
                  control={<WithStyles(Radio) />}
                  label="Find teaching jobs"
                  value="instructor"
                />
              </RadioGroup>,
            ],
            "component": "fieldset",
            "required": true,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "What would you like to do?",
                "className": "nabi-margin-bottom-xsmall",
                "component": "legend",
              },
              "ref": null,
              "rendered": "What would you like to do?",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <WithStyles(FormControlLabel)
                    control={<WithStyles(Radio) />}
                    label="Find a music instructor"
                    value="student"
                  />,
                  <WithStyles(FormControlLabel)
                    control={<WithStyles(Radio) />}
                    label="Find teaching jobs"
                    value="instructor"
                  />,
                ],
                "name": "role",
                "onChange": [MockFunction],
                "value": "student",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "control": <WithStyles(Radio) />,
                    "label": "Find a music instructor",
                    "value": "student",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "control": <WithStyles(Radio) />,
                    "label": "Find teaching jobs",
                    "value": "instructor",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <WithStyles(FormControl)
              component="fieldset"
              fullWidth={true}
              required={true}
            >
              <WithStyles(FormLabel)
                className="nabi-margin-bottom-xsmall"
                component="legend"
              >
                Are the lessons for you or for your child?
              </WithStyles(FormLabel)>
              <RadioGroup
                name="role"
                onChange={[MockFunction]}
                value=""
              >
                <WithStyles(FormControlLabel)
                  control={<WithStyles(Radio) />}
                  label="For me"
                  value="student"
                />
                <WithStyles(FormControlLabel)
                  control={<WithStyles(Radio) />}
                  label="For my child"
                  value="parent"
                />
              </RadioGroup>
            </WithStyles(FormControl)>,
            "className": "nabi-margin-top-small",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <WithStyles(FormLabel)
                  className="nabi-margin-bottom-xsmall"
                  component="legend"
                >
                  Are the lessons for you or for your child?
                </WithStyles(FormLabel)>,
                <RadioGroup
                  name="role"
                  onChange={[MockFunction]}
                  value=""
                >
                  <WithStyles(FormControlLabel)
                    control={<WithStyles(Radio) />}
                    label="For me"
                    value="student"
                  />
                  <WithStyles(FormControlLabel)
                    control={<WithStyles(Radio) />}
                    label="For my child"
                    value="parent"
                  />
                </RadioGroup>,
              ],
              "component": "fieldset",
              "fullWidth": true,
              "required": true,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Are the lessons for you or for your child?",
                  "className": "nabi-margin-bottom-xsmall",
                  "component": "legend",
                },
                "ref": null,
                "rendered": "Are the lessons for you or for your child?",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <WithStyles(FormControlLabel)
                      control={<WithStyles(Radio) />}
                      label="For me"
                      value="student"
                    />,
                    <WithStyles(FormControlLabel)
                      control={<WithStyles(Radio) />}
                      label="For my child"
                      value="parent"
                    />,
                  ],
                  "name": "role",
                  "onChange": [MockFunction],
                  "value": "",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "control": <WithStyles(Radio) />,
                      "label": "For me",
                      "value": "student",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "control": <WithStyles(Radio) />,
                      "label": "For my child",
                      "value": "parent",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "className": "nabi-margin-top-small",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Register as an instructor",
            "className": "nabi-margin-top-small",
            "variant": "body2",
          },
          "ref": null,
          "rendered": "Register as an instructor",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "fullWidth": true,
            "id": "firstName",
            "margin": "normal",
            "name": "firstName",
            "onChange": [MockFunction],
            "placeholder": "First Name",
            "required": true,
            "select": false,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "fullWidth": true,
            "id": "lastName",
            "margin": "normal",
            "name": "lastName",
            "onChange": [MockFunction],
            "placeholder": "Last Name",
            "required": true,
            "select": false,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "fullWidth": true,
            "id": "zipCode",
            "margin": "normal",
            "name": "zipCode",
            "onChange": [MockFunction],
            "placeholder": "ZIP Code",
            "required": true,
            "select": false,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "fullWidth": true,
            "id": "email",
            "margin": "normal",
            "name": "email",
            "onChange": [MockFunction],
            "placeholder": "Email",
            "required": true,
            "select": false,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "fullWidth": true,
            "id": "password",
            "margin": "normal",
            "name": "password",
            "onChange": [MockFunction],
            "placeholder": "Password",
            "required": true,
            "select": false,
            "type": "password",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <WithStyles(InputLabel)
                htmlFor="hearAboutUs"
              >
                How did you hear about us?
              </WithStyles(InputLabel)>,
              <WithStyles(Select)
                fullWidth={true}
                input={
                  <WithStyles(Input)
                    id="hearAboutUs"
                    name="hearAboutUs"
                  />
                }
                onChange={[MockFunction]}
                value=""
              >
                <WithStyles(MenuItem)
                  value="google"
                >
                  Google
                </WithStyles(MenuItem)>
                <WithStyles(MenuItem)
                  value="facebook"
                >
                  Facebook
                </WithStyles(MenuItem)>
                <WithStyles(MenuItem)
                  value="craigslist"
                >
                  Craigslist
                </WithStyles(MenuItem)>
                <WithStyles(MenuItem)
                  value="printAds"
                >
                  Print Ads
                </WithStyles(MenuItem)>
                <WithStyles(MenuItem)
                  value="wordOfMouth"
                >
                  Word Of Mouth
                </WithStyles(MenuItem)>
                <WithStyles(MenuItem)
                  value="currentNabiUser"
                >
                  Current Nabi User
                </WithStyles(MenuItem)>
                <WithStyles(MenuItem)
                  value="other"
                >
                  Other
                </WithStyles(MenuItem)>
              </WithStyles(Select)>,
            ],
            "fullWidth": true,
            "required": true,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "How did you hear about us?",
                "htmlFor": "hearAboutUs",
              },
              "ref": null,
              "rendered": "How did you hear about us?",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <WithStyles(MenuItem)
                    value="google"
                  >
                    Google
                  </WithStyles(MenuItem)>,
                  <WithStyles(MenuItem)
                    value="facebook"
                  >
                    Facebook
                  </WithStyles(MenuItem)>,
                  <WithStyles(MenuItem)
                    value="craigslist"
                  >
                    Craigslist
                  </WithStyles(MenuItem)>,
                  <WithStyles(MenuItem)
                    value="printAds"
                  >
                    Print Ads
                  </WithStyles(MenuItem)>,
                  <WithStyles(MenuItem)
                    value="wordOfMouth"
                  >
                    Word Of Mouth
                  </WithStyles(MenuItem)>,
                  <WithStyles(MenuItem)
                    value="currentNabiUser"
                  >
                    Current Nabi User
                  </WithStyles(MenuItem)>,
                  <WithStyles(MenuItem)
                    value="other"
                  >
                    Other
                  </WithStyles(MenuItem)>,
                ],
                "fullWidth": true,
                "input": <WithStyles(Input)
                  id="hearAboutUs"
                  name="hearAboutUs"
                />,
                "onChange": [MockFunction],
                "value": "",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "Google",
                  "nodeType": "class",
                  "props": Object {
                    "children": "Google",
                    "value": "google",
                  },
                  "ref": null,
                  "rendered": "Google",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "Facebook",
                  "nodeType": "class",
                  "props": Object {
                    "children": "Facebook",
                    "value": "facebook",
                  },
                  "ref": null,
                  "rendered": "Facebook",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "Craigslist",
                  "nodeType": "class",
                  "props": Object {
                    "children": "Craigslist",
                    "value": "craigslist",
                  },
                  "ref": null,
                  "rendered": "Craigslist",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "PrintAds",
                  "nodeType": "class",
                  "props": Object {
                    "children": "Print Ads",
                    "value": "printAds",
                  },
                  "ref": null,
                  "rendered": "Print Ads",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "WordOfMouth",
                  "nodeType": "class",
                  "props": Object {
                    "children": "Word Of Mouth",
                    "value": "wordOfMouth",
                  },
                  "ref": null,
                  "rendered": "Word Of Mouth",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "CurrentNabiUser",
                  "nodeType": "class",
                  "props": Object {
                    "children": "Current Nabi User",
                    "value": "currentNabiUser",
                  },
                  "ref": null,
                  "rendered": "Current Nabi User",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "Other",
                  "nodeType": "class",
                  "props": Object {
                    "children": "Other",
                    "value": "other",
                  },
                  "ref": null,
                  "rendered": "Other",
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <WithStyles(Button)
              color="primary"
              onClick={[MockFunction]}
              variant="raised"
            >
              Submit
            </WithStyles(Button)>,
            "className": "nabi-text-center nabi-margin-top-large",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Submit",
              "color": "primary",
              "onClick": [MockFunction],
              "variant": "raised",
            },
            "ref": null,
            "rendered": "Submit",
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "form",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
